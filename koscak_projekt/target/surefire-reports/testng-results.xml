<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-07T15:43:09Z" name="AllTestsSuite" finished-at="2020-02-07T15:45:11Z" duration-ms="121990">
    <groups>
    </groups>
    <test started-at="2020-02-07T15:43:09Z" name="LinkedIn Test" finished-at="2020-02-07T15:45:11Z" duration-ms="121990">
      <class name="Tests.RegisterTest">
        <test-method is-config="true" signature="setupClass()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:21Z" name="setupClass" finished-at="2020-02-07T15:44:22Z" duration-ms="1717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:22Z" name="setupTest" finished-at="2020-02-07T15:44:33Z" duration-ms="10538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="RegisterWithExistingEmail()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:33Z" name="RegisterWithExistingEmail" finished-at="2020-02-07T15:44:34Z" duration-ms="541" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at Tests.RegisterTest.RegisterWithExistingEmail(RegisterTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:282)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:83)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:114)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithExistingEmail -->
        <test-method is-config="true" signature="teardownTest()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:34Z" name="teardownTest" finished-at="2020-02-07T15:44:34Z" duration-ms="906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:34Z" name="setupTest" finished-at="2020-02-07T15:44:45Z" duration-ms="10303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="RegisterWithInvalidEmail()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:45Z" name="RegisterWithInvalidEmail" finished-at="2020-02-07T15:44:45Z" duration-ms="555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithInvalidEmail -->
        <test-method is-config="true" signature="teardownTest()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:45Z" name="teardownTest" finished-at="2020-02-07T15:44:47Z" duration-ms="1236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:47Z" name="setupTest" finished-at="2020-02-07T15:44:57Z" duration-ms="10318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="RegisterWithLongPassword()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:57Z" name="RegisterWithLongPassword" finished-at="2020-02-07T15:44:58Z" duration-ms="1100" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at Tests.RegisterTest.RegisterWithLongPassword(RegisterTest.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:282)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:83)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:114)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithLongPassword -->
        <test-method is-config="true" signature="teardownTest()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:58Z" name="teardownTest" finished-at="2020-02-07T15:44:59Z" duration-ms="815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:44:59Z" name="setupTest" finished-at="2020-02-07T15:45:09Z" duration-ms="10560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="RegisterWithShortPassword()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:45:09Z" name="RegisterWithShortPassword" finished-at="2020-02-07T15:45:10Z" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithShortPassword -->
        <test-method is-config="true" signature="teardownTest()[pri:0, instance:Tests.RegisterTest@6973bf95]" started-at="2020-02-07T15:45:10Z" name="teardownTest" finished-at="2020-02-07T15:45:11Z" duration-ms="828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
      </class> <!-- Tests.RegisterTest -->
      <class name="Tests.LoginTest">
        <test-method is-config="true" signature="setupClass()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:09Z" name="setupClass" finished-at="2020-02-07T15:43:13Z" duration-ms="4496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:13Z" name="setupTest" finished-at="2020-02-07T15:43:25Z" duration-ms="12135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="LoginWithInvalidPassword()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:25Z" name="LoginWithInvalidPassword" finished-at="2020-02-07T15:43:30Z" duration-ms="4780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidPassword -->
        <test-method is-config="true" signature="teardownTest()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:30Z" name="teardownTest" finished-at="2020-02-07T15:43:31Z" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:31Z" name="setupTest" finished-at="2020-02-07T15:43:42Z" duration-ms="10635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="LoginWithInvalidPhoneNumber()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:42Z" name="LoginWithInvalidPhoneNumber" finished-at="2020-02-07T15:43:43Z" duration-ms="1066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInvalidPhoneNumber -->
        <test-method is-config="true" signature="teardownTest()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:43Z" name="teardownTest" finished-at="2020-02-07T15:43:44Z" duration-ms="764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:44Z" name="setupTest" finished-at="2020-02-07T15:43:54Z" duration-ms="10539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="LoginWithValidEmailAndPassword()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:43:54Z" name="LoginWithValidEmailAndPassword" finished-at="2020-02-07T15:44:02Z" duration-ms="7526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidEmailAndPassword -->
        <test-method is-config="true" signature="teardownTest()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:44:02Z" name="teardownTest" finished-at="2020-02-07T15:44:02Z" duration-ms="804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:44:02Z" name="setupTest" finished-at="2020-02-07T15:44:13Z" duration-ms="10471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="LoginWithValidPhoneNumber()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:44:13Z" name="LoginWithValidPhoneNumber" finished-at="2020-02-07T15:44:20Z" duration-ms="7058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidPhoneNumber -->
        <test-method is-config="true" signature="teardownTest()[pri:0, instance:Tests.LoginTest@6ce139a4]" started-at="2020-02-07T15:44:20Z" name="teardownTest" finished-at="2020-02-07T15:44:21Z" duration-ms="844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
      </class> <!-- Tests.LoginTest -->
    </test> <!-- LinkedIn Test -->
  </suite> <!-- AllTestsSuite -->
</testng-results>
